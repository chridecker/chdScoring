@using System.Globalization
@using chdScoring.App.UI.Pages.Components
@inject ISettingManager clientSettingManager
@inject IchdScoringProfileService profileService
@inject ITimeoutHandler timeoutHandler
@inject IJudgeHubClient apiClient
@inject IBatteryService batteryService
@implements IDisposable
@inherits LayoutComponentBase

<div class="header-panel">
    <HeaderBase TUserId="int" TRightId="int" PageTitle="@this.PageTitle" ShowVersion="true" ShowDateInfo="false">
        <RightChildContent>
            <div class="networkBox">
                <div class="liquid @GetStateCss()"></div>
            </div>
            <Battery BatteryLevel="this.batteryService.BatteryLevel" Charging="this.batteryService.Charging" FullLevel="95" LowLevel="15" />
            <ThemeModeButton />
        </RightChildContent>
    </HeaderBase>
</div>

@code {
    [Parameter] public string PageTitle { get; set; }

    private string _themeModeIcon;
    private CancellationTokenSource _cts = new();

    protected override async Task OnInitializedAsync()
    {
        this.StartRefresh();
        this.batteryService.InfoChanged += this.InfoChanged;
        await base.OnInitializedAsync();
    }

    private async void InfoChanged(object sender, EventArgs e)
    {
        await this.InvokeAsync(this.StateHasChanged);
    }

    private void StartRefresh() => Task.Run(async () =>
      {
          while (!this._cts.Token.IsCancellationRequested)
          {
              var user = this.profileService.User;
              if (user != null && user.LogOffTimer.HasValue)
              {
                  this.timeoutHandler.CalculateDifferences(user.LogOffTimer);
              }

              await this.InvokeAsync(StateHasChanged);
              await Task.Delay(TimeSpan.FromSeconds(5));
          }
      });

    private string GetStateCss() => apiClient?.IsConnected ?? false ? "online" : "offline";

    public void Dispose()
    {
        this.batteryService.InfoChanged -= this.InfoChanged;
        this._cts.Cancel();
        this._cts.Dispose();
    }
}
