@using chdScoring.App.Services;
@inject ISettingManager settingManager

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <button class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="chdScoringToggler"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-people" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        @if (_controlCodeCenterAvailable)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="controlcenter">
                    <span class="oi oi-calculator" aria-hidden="true"></span> Control Center
                </NavLink>
            </div>
        }
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="settings">
                <span class="oi oi-cog" aria-hidden="true"></span> Setting
            </NavLink>
        </div>

    </nav>
</div>

@code {
    private bool collapseNavMenu = true;
    private bool _controlCodeCenterAvailable = false;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    protected override async Task OnAfterRenderAsync(bool first)
    {
        this._controlCodeCenterAvailable = await settingManager.IsControlCenter;

        await base.OnAfterRenderAsync(first);
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
