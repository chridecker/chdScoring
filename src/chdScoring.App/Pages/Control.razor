@using chd.UI.Base.Client.Implementations.Authorization
@using chd.UI.Base.Contracts.Enum
@page "/controlcenter"
@attribute [chdAuthorize<int>(Rights = new int[] { RightConstants.ControlBoard })]

@if (this._dto is not null)
{
    <div class="control-center">
        <div class="timer">
            <div class="pilot">
                &#8470; @this._dto.Pilot.Id - @this._dto.Pilot.Name - Round @this._dto.Round.Id - @this._dto.Round.Program
            </div>
            <div class="time">@_leftTime</div>
            <div class="control">
                <IconButton Style="EIconStyle.Regular" FAClass="@this._faStartStop" OnClick="this.StartStop" />
            </div>

        </div>
        <div class="live">
            <div class="maneouvres">
                @foreach (var maneouvre in this._dto.ManeouvreLst.FirstOrDefault().Value.OrderBy(o => o.Id))
                {
                    <div class="maneouvre">
                        <div class="figur">
                            @maneouvre.Id.ToString("D2") @maneouvre.Name (@maneouvre.Value)
                        </div>
                        <div class="judges">
                            @foreach (var judge in this._dto.Judges.OrderBy(o => o.Id))
                            {
                                var score = this._dto.ManeouvreLst[judge.Id].FirstOrDefault(x => x.Id == maneouvre.Id).Score;
                                <div class="judge-score">@score</div>
                            }
                        </div>
                    </div>
                    <div class="empty"></div>
                }
            </div>
            <div class="results">
                <div class="empty"></div>
                @foreach (var judge in this._dto.Judges.OrderBy(o => o.Id))
                {
                    <div class="judge-result">@this._dto.ManeouvreLst[judge.Id].Select(s => s.Value * (s.Score ?? 0)).Sum()</div>
                }
                <div class="total-result">@this._dto.ManeouvreLst.Values.Select(s => s.Select(x => x.Value * (x.Score ?? 0)).Sum()).Average()</div>
            </div>
        </div>
    </div>
}